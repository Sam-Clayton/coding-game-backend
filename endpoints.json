{
  "GET /api": {
    "description": "serves up a JSON representation of all the available endpoints of the api"
  },
  "GET /api/katas": {
    "description": "serves an array of all katas",
    "exampleResponse": [
      {
        "kata_id": 1,
        "title": "Add Two Numbers",
        "description": "Write a function that takes two numbers and returns their sum",
        "initial_code": "function addNumbers(a, b)",
        "solution_code": "function addNumbers(a, b) { return a + b }",
        "difficulty": "easy",
        "created_at": "2020-07-21 01:20:00"
      }
    ]
  },
  "GET /api/katas/:kata_id": {
    "description": "serves the specified kata",
    "example response": {
      "kata_id": 1,
      "title": "Add Two Numbers",
      "description": "Write a function that takes two numbers and returns their sum",
      "initial_code": "function addNumbers(a, b)",
      "solution_code": "function addNumbers(a, b) { return a + b }",
      "difficulty": "easy",
      "created_at": "2020-07-21 01:20:00"
    }
  },
  "GET /api/katas/:kata_id/tags": {
    "description": "serves the tags associated with the specified kata",
    "exampleResponse": {
      "kata_id": 2,
      "tags": ["numbers", "conditionals"]
    }
  },
  "POST /api/katas": {
    "description": "inserts a new kata into the database",
    "exampleRequestBody": {
      "title": "New Kata",
      "description": "This is a new kata",
      "initial_code": "function newKata(params)",
      "solution_code": "function newKata(params) { solution }",
      "difficulty": "easy, medium, or hard",
      "tags": ["tag1", "tag2"]
    },
    "exampleResponse": {
      "kata_id": 42,
      "title": "New Kata",
      "description": "This is a new kata",
      "initial_code": "function newKata(params)",
      "solution_code": "function newKata(params) { solution }",
      "difficulty": "easy, medium, or hard",
      "created_at": "2025-09-01 16:21"
    }
  },
  "POST /api/submission": {
    "description": "sends user submitted code to be validated and tested",
    "exampleRequestBodyPass": {
      "kata_id": 1,
      "user_code": "function addNumbers(a, b) { return a + b }"
    },
    "exampleResponsePass": {
      "result": "PASS"
    },
    "exampleRequestBodyFail": {
      "kata_id": 1,
      "user_code": "function addNumbers(a, b) { return a }"
    },
    "exampleResponseFail": {
      "result": "FAIL"
    },
    "exampleRequestBodyErr": {
      "kata_id": 1,
      "user_code": "function addNumbers(a, b) { return c }"
    },
    "exampleResponseErr": {
      "result": "ReferenceError: addNumbers is not defined"
    }
  },
  "POST /api/users": {
    "description": "inserts the current user into the internal database",
    "exampleRequestBody": {
      "username": "kataenthusiast31",
      "avatar_url": "https://cdn-icons-png.flaticon.com/512/3135/3135715.png"
    },
    "exampleResponse": {
      "user_id": 3,
      "clerk_user_id": "clerkuserid",
      "username": "kataenthusiast31",
      "avatar_url": "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
      "level": 1,
      "xp": 0,
      "is_admin": false,
      "created_at": "2025-09-04 11:30"
    }
  },
  "GET /api/users/profile": {
    "description": "serves the current user's information from the internal database",
    "exampleResponse": {
      "user_id": 3,
      "clerk_user_id": "clerkuserid",
      "username": "kataenthusiast31",
      "avatar_url": "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
      "level": 1,
      "xp": 0,
      "is_admin": false,
      "created_at": "2025-09-04 11:30"
    }
  }
}
